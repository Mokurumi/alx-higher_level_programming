=================================
Test for module matrix_division.py
=================================

The following are test for function: ``matrix_divided(matrix, div)``.

Import
======
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Valid Matrix Division
=====================

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    [[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

    >>> matrix = [[10, 20], [30, 40], [50, 60]]
    >>> div = 5
    >>> matrix_divided(matrix, div)
    [[2.0, 4.0], [6.0, 8.0], [10.0, 12.0]]

Empty Matrix
============

    >>> matrix = []
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

    >>> matrix = [[]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Invalid Matrix
==============

    >>> matrix = [[1, 2, 3], [4, 5]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: Each row of matrix must have the same size

    >>> matrix = [[1, 2, 3], [4, '5', 6]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Invalid Matrix Type
===================

    >>> matrix = [1, 2, 3]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Invalid Division
================

    >>> matrix = [[1, 2], [3, 4]]
    >>> div = 0
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero

    >>> matrix = [[1, 2], [3, 4]]
    >>> div = '2'
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

Matrix with Strings and Non-Rectangular
=======================================

    >>> matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: Each row of matrix must have the same size

    >>> matrix = [['a', 'b'], ['c', 'd']]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    TypeError: matrix should contain only integers or floats

Float 'inf' Division
====================

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> div = float('inf')
    >>> result = matrix_divided(matrix, div)
    >>> all(all(value == 0.0 for value in row) for row in result)
    True

Matrix with 'inf' or 'nan' Floats
==================================

    >>> matrix = [[1, 2, 3], [4, float('inf'), 6]]
    >>> div = 2
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float inf to integer

    >>> matrix = [[1, 2, 3], [4, float('nan'), 6]]
    >>> div = float('inf')
    >>> matrix_divided(matrix, div)
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float nan to integer

Missing Arguments
=================

    >>> matrix_divided()
    Traceback (most recent call last):
        ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

    >>> matrix_divided([[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...

    TypeError: matrix_divided() missing 1 required positional argument: 'div'
