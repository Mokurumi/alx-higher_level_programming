#!/usr/bin/python3
"""Unit tests for print_square"""


import unittest
from print_square import print_square


class TestPrintSquare(unittest.TestCase):
    """
    A set of unit tests for the print_square function.
    """

    def test_positive_size(self):
        """
        Test case for a positive size.

        The print_square function should print
            a square of '#' characters with the specified size.
        """
        captured_output = self.capture_output(lambda: print_square(3))
        expected_output = "###\n###\n###"
        self.assertEqual(captured_output, expected_output)

    def test_zero_size(self):
        """
        Test case for a size of zero.

        The print_square function should not print anything
            when the size is zero.
        """
        captured_output = self.capture_output(lambda: print_square(0))
        self.assertEqual(captured_output, "")

    def test_negative_size(self):
        """
        Test case for a negative size.

        The print_square function should not print anything and
            raise a ValueError when the size is negative.
        """
        with self.assertRaises(ValueError):
            print_square(-2)

    def test_float_size(self):
        """
        Test case for a floating-point size.

        The print_square function should not print anything and
            raise a TypeError when the size is a float.
        """
        with self.assertRaises(TypeError):
            print_square(2.5)

    def test_size_as_string(self):
        """
        Test case for the size provided as a string.

        The print_square function should not print anything and
            raise a TypeError when the size is provided as a string.
        """
        with self.assertRaises(TypeError):
            print_square("3")

    def capture_output(self, func):
        """
        Helper function to capture the output of a function as a string.
        """
        import sys
        from io import StringIO

        captured_output = StringIO()
        sys.stdout = captured_output
        func()
        sys.stdout = sys.__stdout__
        return captured_output.getvalue().strip()

if __name__ == '__main__':
    unittest.main()
